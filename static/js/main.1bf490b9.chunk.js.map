{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","goodsReverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","resetButton","this","preparedGoods","goods","visibleGoods","sort","productName1","productName2","localeCompare","product1","product2","length","reverse","getReorderedGoods","className","Box","sx","display","m","mt","mx","width","height","Paper","variant","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","Button","type","onClick","color","map","product","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,6GAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,mBAAAA,E,iBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,aAAe,WACb,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,eAAiB,WACf,EAAKD,SAAS,CAAEJ,SAAUJ,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEJ,SAAUJ,EAASY,UAjBvC,EAoBEC,YAAc,WACZ,EAAKL,SAAS,CACZJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAEZS,EA7DH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEzB,OAAQZ,GACN,KAAKJ,EAASU,SACZO,EAAaC,MAAK,SAACC,EAAcC,GAAf,OAChBD,EAAaE,cAAcD,MAE7B,MAEF,KAAKpB,EAASY,OACZK,EAAaC,MAAK,SAACI,EAAUC,GAAX,OAChBD,EAASE,OAASD,EAASC,UAI/B,KAAKxB,EAASK,MAShB,OAJIC,GACFW,EAAaQ,UAGRR,EAkCHS,CAAkBzB,EAAiBa,KAAKX,OAG1C,OACE,mCACE,qBAAKwB,UAAU,YAAf,SACE,cAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACT,kBAAmB,CACjBC,EAAG,EACHC,GAAI,GACJC,GAAI,OACJC,MAAO,IACPC,OAAQ,MARd,SAYE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRR,GAAI,CACFS,gBAAiB,gBACjBR,QAAS,OACTS,WAAY,SACZC,eAAgB,QAChBC,SAAU,GACVC,WAAY,QARhB,SAWE,sBAAKf,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,cAACgB,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWvB,IAAaJ,EAASU,SAC7B,iBACA,0BACJmC,QAAS/B,KAAKL,eANhB,iCAWA,cAACkC,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWvB,IAAaJ,EAASY,OAC7B,oBACA,6BACJiC,QAAS/B,KAAKH,aANhB,4BAWA,cAACgC,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLjB,UAAWrB,EACP,oBACA,6BACJuC,QAAS/B,KAAKP,aANhB,sBAWEH,IAAaJ,EAASK,MAAQC,IAE9B,cAACqC,EAAA,EAAD,CACEN,QAAQ,WACRS,MAAM,QACNF,KAAK,SACLjB,UAAU,mBACVkB,QAAS/B,KAAKD,YALhB,sBAWJ,qBAAKc,UAAU,OAAf,SACE,6BACGZ,EAAcgC,KAAI,SAAAC,GAAO,OACxB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,yBA/G9C,GAAyBC,aC3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1bf490b9.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alpabet',\n  LENGTH = 'length',\n}\n\ntype State = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((productName1, productName2) => (\n        productName1.localeCompare(productName2)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((product1, product2) => (\n        product1.length - product2.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  goodsReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetButton = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const preparedGoods = (\n      getReorderedGoods(goodsFromServer, this.state)\n    );\n\n    return (\n      <>\n        <div className=\"container\">\n          <Box\n            sx={{\n              display: 'flex',\n              '& > :not(style)': {\n                m: 1,\n                mt: 30,\n                mx: 'auto',\n                width: 665,\n                height: 500,\n              },\n            }}\n          >\n            <Paper\n              variant=\"outlined\"\n              sx={{\n                backgroundColor: 'text.disabled',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'start',\n                fontSize: 24,\n                fontWeight: 'bold',\n              }}\n            >\n              <div className=\"section content\">\n                <div className=\"buttons\">\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    className={sortType === SortType.ALPHABET\n                      ? 'button is-info'\n                      : 'button is-info is-light'}\n                    onClick={this.sortByAlphabet}\n                  >\n                    Sort alphabetically\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    className={sortType === SortType.LENGTH\n                      ? 'button is-success'\n                      : 'button is-success is-light'}\n                    onClick={this.sortByLength}\n                  >\n                    Sort by length\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    type=\"button\"\n                    className={isReversed\n                      ? 'button is-warning'\n                      : 'button is-warning is-light'}\n                    onClick={this.goodsReverse}\n                  >\n                    Reverse\n                  </Button>\n\n                  {(sortType !== SortType.NONE || isReversed)\n                  && (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      type=\"button\"\n                      className=\"button is-danger\"\n                      onClick={this.resetButton}\n                    >\n                      Reset\n                    </Button>\n                  )}\n                </div>\n                <div className=\"list\">\n                  <ul>\n                    {preparedGoods.map(product => (\n                      <li data-cy=\"Good\" key={product}>\n                        {product}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </Paper>\n          </Box>\n        </div>\n\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}